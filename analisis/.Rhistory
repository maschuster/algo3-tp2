mutate(
Memoria = substr(Algoritmo, 5, 5),
Gap = (47-Impacto)/47
)
ggplot(data, aes(x = Iteracion, y = Impacto, group = Algoritmo, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
facet_wrap(~Memoria, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
facet_wrap(~Memoria, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
facet_wrap(~Memoria, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom") +
ggtitle("TSC-C")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
facet_wrap(~Memoria, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom") +
ggtitle("TSC")
ggsave("plots/impacto_tiempo.png", width = 8, height = 7)
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggsave("plots/impacto_tiempo.png", width = 8, height = 7)
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_point(shape = 21) +
geom_line() +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line(color = "black") +
geom_point(shape = 21) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line(color = "grey") +
geom_point(shape = 21) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggsave("plots/impacto_tiempo.png", width = 8, height = 7)
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line(alpha = .5) +
geom_point(shape = 21) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line(color = "black", alpha = .75) +
geom_point(shape = 21) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 2) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Mejora, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21, aes(color = Mejora)) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line(aes(color = Aspirar)) +
geom_point(shape = 21) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line(aes(color = Aspirar)) +
geom_point(shape = 21, alpha = 0.5) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
annotate("test", y = 48, x = 0, label = "Óptimo") +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
annotate("text", y = 48, x = 0, label = "Óptimo") +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
annotate("text", y = 48.5, x = 0, label = "Óptimo") +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
annotate("text", y = 48.5, x = 0, label = "Óptimo", size = 4) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
annotate("text", y = 48.5, x = 0, label = "Óptimo", size = 2) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
annotate("text", y = 48.5, x = 0, label = "Óptimo", size = 3) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
annotate("text", y = 48.5, x = 0, label = "Óptimo", size = 3.5) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
annotate("text", y = 48.5, x = -0.5, label = "Óptimo", size = 3.5) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
annotate("text", y = 48.5, x = -1, label = "Óptimo", size = 3.5) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
annotate("text", y = 48.5, x = -1.5, label = "Óptimo", size = 3.5) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggplot(data, aes(x = Iteracion, y = Impacto, group = Aspirar, color = Aspirar, fill = Mejora)) +
geom_hline(yintercept = 47, linetype = "dashed", alpha = .5) +
geom_line() +
geom_point(shape = 21) +
annotate("text", y = 48.5, x = -0, label = "Óptimo", size = 3.5) +
facet_wrap(~Algoritmo, scale = "free_x", ncol = 1) +
scale_fill_manual(values = c("#FFFFFF", "#000000")) +
theme(legend.position = "bottom")
ggsave("plots/impacto_tiempo.png", width = 8, height = 7)
## Histograma ------------------------------------------------------------------
data %>%
filter(substr(Tabu, 1, 3) == "TSC") %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n()),
meanItEfectivas = mean(ItEfectivas),
meanMemoriaEfectiva = mean(memoriaEfectiva)
) %>%
ggplot(aes(meanGap,  fill = "red")) +
geom_histogram() +
xlim(0,1) +
facet_grid(Tabu~Inicial, scale="free_y") +
theme(legend.position = "none") +
xlab("Gap promedio") +
ylab("Combinaciones de parámetros")
## Histograma ------------------------------------------------------------------
data %>%
filter(substr(Tabu, 1, 3) == "TSC") %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n()),
meanItEfectivas = mean(ItEfectivas),
meanMemoriaEfectiva = mean(memoriaEfectiva)
) %>%
ggplot(aes(meanGap,  fill = "red")) +
geom_histogram() +
xlim(0,1) +
facet_grid(Tabu~Inicial, scale="free_y") +
theme(legend.position = "none") +
xlab("Gap promedio") +
ylab("Combinaciones de parámetros")
library(tidyverse)
library(pheatmap)
data <- read_csv("../notebooks/tabu_opt_total-3it.csv") %>%
mutate(memoriaEfectiva =
case_when(
CantMemoria >= ItEfectivas ~ ItEfectivas,
TRUE                       ~ CantMemoria
))
dataTest2 <- read_csv("../notebooks/tabu_test_total_restantes.csv") %>%
mutate(memoriaEfectiva =
case_when(
CantMemoria >= ItEfectivas ~ ItEfectivas,
TRUE                       ~ CantMemoria
))
dataTest1  <- read_csv("../notebooks/tabu_test_limited_total.csv") %>%
mutate(memoriaEfectiva =
case_when(
CantMemoria >= ItEfectivas ~ ItEfectivas,
TRUE                       ~ CantMemoria
))
dataTest <- bind_rows(dataTest1, dataTest2)
## Ranking ---------------------------------------------------------------------
ranking <- data %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n()),
meanTime = mean(Time / 1000),
seTime = sd(Time / 1000)/sqrt(n()),
meanItEfectivas = mean(ItEfectivas),
meanMemoriaEfectiva = mean(memoriaEfectiva)
) %>%
arrange(meanGap, meanTime) %>%
group_by(Tabu, Inicial) %>%
filter(row_number()==1) %>%
ungroup() %>%
mutate(Entrenamiento = row_number())
rankingTest <- dataTest %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n()),
meanItEfectivas = mean(ItEfectivas),
meanMemoriaEfectiva = mean(memoriaEfectiva)
)
ranking %>%
select(-seGap, -meanItEfectivas, -meanMemoriaEfectiva, -Entrenamiento, -seTime) %>%
mutate(meanGap = round(meanGap, 3)) %>%
xtable::xtable(type = "latex")
rankingFull <- left_join(ranking, rankingTest,
by = c("Tabu", "Inicial", "Iteraciones", "PorcentajeVecindad", "CantMemoria", "Aspirar"),
suffix = c("_train", "_test")) %>%
arrange(meanGap_test) %>%
mutate(Testeo = row_number()) %>%
gather("Datos", "Orden", c(Entrenamiento, Testeo)) %>%
mutate(meanGap =
case_when(
Datos == "Entrenamiento" ~ meanGap_train,
TRUE                     ~ meanGap_test
)
)
ggplot(rankingFull,
aes(y = Orden, x = Datos, label = paste0(Tabu, " ", Inicial, ": ", round(meanGap,3)),
group = paste(Tabu, Inicial), color = paste(Tabu, Inicial))) +
geom_line() +
geom_label() +
scale_x_discrete(expand = c(0.12, 0.12)) +
scale_y_continuous(trans = "reverse", breaks = seq(1, nrow(ranking)), expand = c(0.1, 0.1)) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none"
)
## Histograma ------------------------------------------------------------------
data %>%
filter(substr(Tabu, 1, 3) == "TSC") %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n()),
meanItEfectivas = mean(ItEfectivas),
meanMemoriaEfectiva = mean(memoriaEfectiva)
) %>%
ggplot(aes(meanGap,  fill = "red")) +
geom_histogram() +
xlim(0,1) +
facet_grid(Tabu~Inicial, scale="free_y") +
theme(legend.position = "none") +
xlab("Gap promedio") +
ylab("Combinaciones de parámetros")
ranking
## Histograma ------------------------------------------------------------------
mejorGapTSC <- ranking %>%
filter(substr(Tabu, 1, 3) == "TSC") %>%
group_by(Tabu) %>%
arrange(meanGap) %>%
filter(row_number()==1)
mejorGapTSC
## Histograma ------------------------------------------------------------------
mejorGapTSC <- data %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n()),
meanTime = mean(Time / 1000),
seTime = sd(Time / 1000)/sqrt(n()),
meanItEfectivas = mean(ItEfectivas),
meanMemoriaEfectiva = mean(memoriaEfectiva)
) %>%
filter(substr(Tabu, 1, 3) == "TSC") %>%
group_by(Tabu) %>%
arrange(meanGap, meanTime) %>%
filter(row_number()==1)
mejorGapTSC
View(data)
data %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n()),
meanTime = mean(Time / 1000),
seTime = sd(Time / 1000)/sqrt(n()),
meanItEfectivas = mean(ItEfectivas),
meanMemoriaEfectiva = mean(memoriaEfectiva)
) %>%
filter(substr(Tabu, 1, 3) == "TSC") %>%
group_by(Tabu) %>%
arrange(meanGap, meanTime) %>%
filter(row_number()==1)
data %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n()),
meanTime = mean(Time / 1000),
seTime = sd(Time / 1000)/sqrt(n()),
meanItEfectivas = mean(ItEfectivas),
meanMemoriaEfectiva = mean(memoriaEfectiva)
) %>%
filter(substr(Tabu, 1, 3) == "TSC")
## Histograma ------------------------------------------------------------------
mejorGapTSC <- data %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n()),
meanTime = mean(Time / 1000),
seTime = sd(Time / 1000)/sqrt(n()),
meanItEfectivas = mean(ItEfectivas),
meanMemoriaEfectiva = mean(memoriaEfectiva)
) %>%
filter(substr(Tabu, 1, 3) == "TSC") %>%
group_by(Tabu) %>%
arrange(meanGap, meanTime) %>%
filter(row_number()==1)
View(data)
mejorGapTSC
data %>%
filter(substr(Tabu, 1, 3) == "TSC") %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n()),
meanItEfectivas = mean(ItEfectivas),
meanMemoriaEfectiva = mean(memoriaEfectiva)
) %>%
ggplot(aes(meanGap,  fill = "red")) +
geom_vline(data = mejorGapTSC, aes(xintercept = meanGap), linetype = "dashed", alpha = .5) +
geom_histogram() +
xlim(0,1) +
facet_grid(Tabu~Inicial, scale="free_y") +
theme(legend.position = "none") +
xlab("Gap promedio") +
ylab("Combinaciones de parámetros")
## Histograma ------------------------------------------------------------------
mejorGapTSC <- data %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n()),
meanTime = mean(Time / 1000),
seTime = sd(Time / 1000)/sqrt(n()),
meanItEfectivas = mean(ItEfectivas),
meanMemoriaEfectiva = mean(memoriaEfectiva)
) %>%
filter(substr(Tabu, 1, 3) == "TSC") %>%
group_by(Tabu) %>%
arrange(meanGap, meanTime) %>%
filter(row_number()==1) %>%
select(Tabu, meanGap)
data %>%
filter(substr(Tabu, 1, 3) == "TSC") %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n()),
meanItEfectivas = mean(ItEfectivas),
meanMemoriaEfectiva = mean(memoriaEfectiva)
) %>%
ggplot(aes(meanGap,  fill = "red")) +
geom_vline(data = mejorGapTSC, aes(xintercept = meanGap), linetype = "dashed", alpha = .5) +
geom_histogram() +
xlim(0,1) +
facet_grid(Tabu~Inicial, scale="free_y") +
theme(legend.position = "none") +
xlab("Gap promedio") +
ylab("Combinaciones de parámetros")
mejorGapTSS <- data %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n()),
meanTime = mean(Time / 1000),
seTime = sd(Time / 1000)/sqrt(n()),
meanItEfectivas = mean(ItEfectivas),
meanMemoriaEfectiva = mean(memoriaEfectiva)
) %>%
filter(substr(Tabu, 1, 3) == "TSS") %>%
group_by(Tabu) %>%
arrange(meanGap, meanTime) %>%
filter(row_number()==1) %>%
select(Tabu, meanGap)
data %>%
filter(substr(Tabu, 1, 3) == "TSS") %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n()),
meanItEfectivas = mean(ItEfectivas),
meanMemoriaEfectiva = mean(memoriaEfectiva)
) %>%
ggplot(aes(meanGap,  fill = "red")) +
geom_vline(data = mejorGapTSS, aes(xintercept = meanGap), linetype = "dashed", alpha = .5) +
geom_histogram() +
xlim(0,1) +
facet_grid(Tabu~Inicial, scale="free_y") +
theme(legend.position = "none") +
xlab("Gap promedio") +
ylab("Combinaciones de parámetros")
