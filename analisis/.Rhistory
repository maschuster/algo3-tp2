group_by(Tabu, Inicial) %>%
summarize(
seItEfectivas = sd(meanItEfectivas),
meanItEfectivas = mean(meanItEfectivas)
)
## Correlacion meanGap vs parametros -------------------------------------------
dataItEf <- data %>%
filter(Aspirar == TRUE) %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanItEfectivas = mean(ItEfectivas),
seItEfectivas = sd(ItEfectivas)
) %>%
group_by(Tabu, Inicial) %>%
summarize(
seItEfectivas = sd(meanItEfectivas),
meanItEfectivas = mean(meanItEfectivas)
)
data %>%
filter(Aspirar == TRUE) %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n())
) %>%
filter(PorcentajeVecindad %in% c(5, 20, 40, 60, 80, 100)) %>%
mutate(PorcentajeVecindad = as.factor(PorcentajeVecindad)) %>%
group_by(Tabu, Inicial, PorcentajeVecindad, CantMemoria) %>%
summarize(
seGap = sd(meanGap)/sqrt(n()),
meanGap = mean(meanGap)
) %>%
ggplot(aes(y = meanGap, x = CantMemoria, group = PorcentajeVecindad, color = PorcentajeVecindad)) +
geom_errorbar(aes(ymax= meanGap + seGap, ymin = meanGap - seGap), width = 0.1) +
geom_vline(data = dataItEf, aes(xintercept = meanItEfectivas), color = "black", alpha = 0.5) +
geom_vline(data = dataItEf, aes(xintercept = meanItEfectivas + seItEfectivas), color = "blue", alpha = 0.5, linetype = "dashed") +
geom_vline(data = dataItEf, aes(xintercept = meanItEfectivas - seItEfectivas), color = "blue", alpha = 0.5, linetype = "dashed") +
geom_point() +
geom_line() +
facet_grid(Tabu~Inicial, scales = "free_y")
## Correlacion meanGap vs parametros -------------------------------------------
dataItEfTSC <- data %>%
filter(substr(Tabu, 1, 3) == "TSC") %>%
filter(Aspirar == TRUE) %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanItEfectivas = mean(ItEfectivas),
seItEfectivas = sd(ItEfectivas)
) %>%
group_by(Tabu, Inicial) %>%
summarize(
seItEfectivas = sd(meanItEfectivas),
meanItEfectivas = mean(meanItEfectivas)
)
dataItEfTSS <- data %>%
filter(substr(Tabu, 1, 3) == "TSS") %>%
filter(Aspirar == TRUE) %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanItEfectivas = mean(ItEfectivas),
seItEfectivas = sd(ItEfectivas)
) %>%
group_by(Tabu, Inicial) %>%
summarize(
seItEfectivas = sd(meanItEfectivas),
meanItEfectivas = mean(meanItEfectivas)
)
data %>%
filter(substr(Tabu, 1, 3) == "TSC") %>%
filter(Aspirar == TRUE) %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n())
) %>%
filter(PorcentajeVecindad %in% c(5, 20, 40, 60, 80, 100)) %>%
mutate(PorcentajeVecindad = as.factor(PorcentajeVecindad)) %>%
group_by(Tabu, Inicial, PorcentajeVecindad, CantMemoria) %>%
summarize(
seGap = sd(meanGap)/sqrt(n()),
meanGap = mean(meanGap)
) %>%
ggplot(aes(y = meanGap, x = CantMemoria, group = PorcentajeVecindad, color = PorcentajeVecindad)) +
geom_errorbar(aes(ymax= meanGap + seGap, ymin = meanGap - seGap), width = 0.1) +
geom_vline(data = dataItEfTSC, aes(xintercept = meanItEfectivas), color = "black", alpha = 0.5) +
geom_vline(data = dataItEfTSC, aes(xintercept = meanItEfectivas + seItEfectivas), color = "blue", alpha = 0.5, linetype = "dashed") +
geom_vline(data = dataItEfTSC, aes(xintercept = meanItEfectivas - seItEfectivas), color = "blue", alpha = 0.5, linetype = "dashed") +
geom_point() +
geom_line() +
facet_grid(Tabu~Inicial, scales = "free_y")
data %>%
filter(substr(Tabu, 1, 3) == "TSS") %>%
filter(Aspirar == TRUE) %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n())
) %>%
filter(PorcentajeVecindad %in% c(5, 20, 40, 60, 80, 100)) %>%
mutate(PorcentajeVecindad = as.factor(PorcentajeVecindad)) %>%
group_by(Tabu, Inicial, PorcentajeVecindad, CantMemoria) %>%
summarize(
seGap = sd(meanGap)/sqrt(n()),
meanGap = mean(meanGap)
) %>%
ggplot(aes(y = meanGap, x = CantMemoria, group = PorcentajeVecindad, color = PorcentajeVecindad)) +
geom_errorbar(aes(ymax= meanGap + seGap, ymin = meanGap - seGap), width = 0.1) +
geom_vline(data = dataItEfTSS, aes(xintercept = meanItEfectivas), color = "black", alpha = 0.5) +
geom_vline(data = dataItEfTSS, aes(xintercept = meanItEfectivas + seItEfectivas), color = "blue", alpha = 0.5, linetype = "dashed") +
geom_vline(data = dataItEfTSS, aes(xintercept = meanItEfectivas - seItEfectivas), color = "blue", alpha = 0.5, linetype = "dashed") +
geom_point() +
geom_line() +
facet_grid(Tabu~Inicial, scales = "free_y")
data %>%
filter(substr(Tabu, 1, 3) == "TSS") %>%
filter(Aspirar == TRUE, CantMemoria <= 200) %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)
) %>%
filter(PorcentajeVecindad %in% c(20, 40, 60, 80, 100)) %>%
mutate(PorcentajeVecindad = as.factor(PorcentajeVecindad)) %>%
group_by(Tabu, Inicial, PorcentajeVecindad, Iteraciones) %>%
summarize(
seGap = sd(meanGap)/sqrt(n()),
meanGap = mean(meanGap)
) %>%
ggplot(aes(y = meanGap, x = Iteraciones, group = PorcentajeVecindad, color = PorcentajeVecindad)) +
geom_errorbar(aes(ymax= meanGap + seGap, ymin = meanGap - seGap), width = 0.1) +
geom_point() +
geom_line() +
geom_vline(data = dataItEfTSS, aes(xintercept = meanItEfectivas), color = "black", alpha = 0.5) +
geom_vline(data = dataItEfTSS, aes(xintercept = meanItEfectivas + seItEfectivas), color = "blue", alpha = 0.5, linetype = "dashed") +
geom_vline(data = dataItEfTSS, aes(xintercept = meanItEfectivas - seItEfectivas), color = "blue", alpha = 0.5, linetype = "dashed") +
facet_grid(Tabu~Inicial, scales = "free_y")
data %>%
filter(substr(Tabu, 1, 3) == "TSS") %>%
filter(Aspirar == TRUE) %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n())
) %>%
filter(PorcentajeVecindad %in% c(5, 20, 40, 60, 80, 100)) %>%
mutate(PorcentajeVecindad = as.factor(PorcentajeVecindad)) %>%
group_by(Tabu, Inicial, PorcentajeVecindad, CantMemoria) %>%
summarize(
seGap = sd(meanGap)/sqrt(n()),
meanGap = mean(meanGap)
) %>%
ggplot(aes(y = meanGap, x = CantMemoria, group = PorcentajeVecindad, color = PorcentajeVecindad)) +
geom_errorbar(aes(ymax= meanGap + seGap, ymin = meanGap - seGap), width = 0.1) +
geom_vline(data = dataItEfTSS, aes(xintercept = meanItEfectivas), color = "black", alpha = 0.5) +
geom_vline(data = dataItEfTSS, aes(xintercept = meanItEfectivas + seItEfectivas), color = "blue", alpha = 0.5, linetype = "dashed") +
geom_vline(data = dataItEfTSS, aes(xintercept = meanItEfectivas - seItEfectivas), color = "blue", alpha = 0.5, linetype = "dashed") +
geom_point() +
geom_line() +
facet_grid(Tabu~Inicial, scales = "free_y")
## TSC-C -----------------------------------------------------------------------
data %>%
mutate(PorcentajeVecindad = as.factor(PorcentajeVecindad)) %>%
group_by(Algoritmo, PorcentajeVecindad) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n())
) %>%
ggplot(aes(x = PorcentajeVecindad, y = meanGap, group = Algoritmo, color = Algoritmo)) +
geom_errorbar(aes(ymax = meanGap + seGap, ymin = meanGap - seGap), width = 0.2) +
geom_point() +
geom_line()
data %>%
# mutate(PorcentajeVecindad = as.factor(PorcentajeVecindad)) %>%
group_by(PorcentajeVecindad, Tabu, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n())
) %>%
ggplot(aes(x = PorcentajeVecindad, y = meanGap, group = Tabu, color = Tabu)) +
geom_errorbar(aes(ymax = meanGap + seGap, ymin = meanGap - seGap), width = 0.5) +
geom_point() +
geom_line() +
facet_wrap(~Aspirar)
## Ranking ---------------------------------------------------------------------
ranking <- data %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n()),
meanItEfectivas = mean(ItEfectivas),
meanMemoriaEfectiva = mean(memoriaEfectiva)
) %>%
arrange(meanGap) %>%
group_by(Tabu, Inicial) %>%
filter(row_number()==1) %>%
ungroup() %>%
mutate(Entrenamiento = row_number())
rankingFull <- left_join(ranking, rankingTest,
by = c("Tabu", "Inicial", "Iteraciones", "PorcentajeVecindad", "CantMemoria", "Aspirar"),
suffix = c("_train", "_test")) %>%
arrange(meanGap_test) %>%
mutate(Testeo = row_number()) %>%
gather("Datos", "Orden", c(Entrenamiento, Testeo)) %>%
mutate(meanGap =
case_when(
Datos == "Entrenamiento" ~ meanGap_train,
TRUE                     ~ meanGap_test
)
)
rankingTest <- dataTest %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n()),
meanItEfectivas = mean(ItEfectivas),
meanMemoriaEfectiva = mean(memoriaEfectiva)
)
ggplot(rankingFull,
aes(y = Orden, x = Datos, label = paste0(Tabu, " ", Inicial, "\n", round(meanGap,3)),
group = paste(Tabu, Inicial), color = paste(Tabu, Inicial))) +
geom_line() +
geom_label() +
scale_x_discrete(expand = c(0.1, 0.1)) +
scale_y_continuous(trans = "reverse", breaks = seq(1, nrow(ranking)), expand = c(0.1, 0.1)) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none"
)
## Histograma ------------------------------------------------------------------
data %>%
filter(substr(Tabu, 1, 3) == "TSC") %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n()),
meanItEfectivas = mean(ItEfectivas),
meanMemoriaEfectiva = mean(memoriaEfectiva)
) %>%
ggplot(aes(meanGap)) +
geom_histogram() +
xlim(0,1) +
facet_grid(Tabu~Inicial, scale="free_y")
data %>%
filter(substr(Tabu, 1, 3) == "TSS") %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n()),
meanItEfectivas = mean(ItEfectivas),
meanMemoriaEfectiva = mean(memoriaEfectiva)
) %>%
ggplot(aes(meanGap)) +
geom_histogram() +
xlim(0,1) +
facet_grid(Tabu~Inicial, scale="free_y")
## Porcentaje de vecindad ------------------------------------------------------
data %>%
mutate(algo3 = substr(Tabu, 1, 3)) %>%
mutate(PorcentajeVecindad = as.factor(PorcentajeVecindad)) %>%
group_by(algo3, Algoritmo, PorcentajeVecindad) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n())
) %>%
ggplot(aes(x = PorcentajeVecindad, y = meanGap, group = Algoritmo, color = Algoritmo)) +
geom_errorbar(aes(ymax = meanGap + seGap, ymin = meanGap - seGap), width = 0.2) +
geom_point() +
geom_line() +
facet_wrap(~algo3, scale = "free_y")
## Efecto de aspirar -----------------------------------------------------------
data %>%
filter(substr(Tabu, 1, 3) == "TSC") %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n())
) %>%
filter(PorcentajeVecindad %in% c(5, 20, 40, 60, 80, 100)) %>%
mutate(PorcentajeVecindad = as.factor(PorcentajeVecindad)) %>%
group_by(Tabu, Inicial, PorcentajeVecindad, Aspirar) %>%
summarize(
seGap = sd(meanGap)/sqrt(n()),
meanGap = mean(meanGap)
) %>%
ggplot(aes(y = meanGap, x = Aspirar, group = PorcentajeVecindad, color = PorcentajeVecindad)) +
geom_errorbar(aes(ymax= meanGap + seGap, ymin = meanGap - seGap), width = 0.1) +
geom_point() +
geom_line() +
facet_grid(Tabu~Inicial, scales = "free_y")
data %>%
filter(substr(Tabu, 1, 3) == "TSC") %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n())
) %>%
filter(PorcentajeVecindad %in% c(5, 20, 40, 60, 80, 100)) %>%
mutate(PorcentajeVecindad = as.factor(PorcentajeVecindad)) %>%
group_by(Tabu, Inicial, PorcentajeVecindad, Aspirar) %>%
summarize(
seGap = sd(meanGap)/sqrt(n()),
meanGap = mean(meanGap)
) %>%
ggplot(aes(y = meanGap, x = Aspirar, group = PorcentajeVecindad, color = PorcentajeVecindad)) +
geom_errorbar(aes(ymax= meanGap + seGap, ymin = meanGap - seGap), width = 0.1) +
geom_point() +
geom_line() +
facet_grid(Tabu~Inicial, scales = "free_y")
## Impacto de activar aspiracion sobre el tiempo -------------------------------
data %>%
filter(substr(Tabu, 1, 3) == "TSC") %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanTime = mean(Time/1000),
seTime = sd(Time/1000)/sqrt(n())
) %>%
filter(PorcentajeVecindad %in% c(5, 20, 40, 60, 80, 100)) %>%
mutate(PorcentajeVecindad = as.factor(PorcentajeVecindad)) %>%
group_by(Tabu, Inicial, PorcentajeVecindad, Aspirar) %>%
summarize(
seTime = sd(meanTime)/sqrt(n()),
meanTime = mean(meanTime)
) %>%
ggplot(aes(y = meanTime, x = Aspirar, group = PorcentajeVecindad, color = PorcentajeVecindad)) +
geom_errorbar(aes(ymax= meanTime + seTime, ymin = meanTime - seTime), width = 0.1) +
geom_point() +
geom_line() +
facet_grid(Tabu~Inicial, scales = "free_y")
data %>%
filter(substr(Tabu, 1, 3) == "TSS") %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanTime = mean(Time/1000),
seTime = sd(Time/1000)/sqrt(n())
) %>%
filter(PorcentajeVecindad %in% c(5, 20, 40, 60, 80, 100)) %>%
mutate(PorcentajeVecindad = as.factor(PorcentajeVecindad)) %>%
group_by(Tabu, Inicial, PorcentajeVecindad, Aspirar) %>%
summarize(
seTime = sd(meanTime)/sqrt(n()),
meanTime = mean(meanTime)
) %>%
ggplot(aes(y = meanTime, x = Aspirar, group = PorcentajeVecindad, color = PorcentajeVecindad)) +
geom_errorbar(aes(ymax= meanTime + seTime, ymin = meanTime - seTime), width = 0.1) +
geom_point() +
geom_line() +
facet_grid(Tabu~Inicial, scales = "free_y")
## Correlacion meanGap vs parametros -------------------------------------------
dataItEfTSC <- data %>%
filter(substr(Tabu, 1, 3) == "TSC") %>%
filter(Aspirar == TRUE) %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanItEfectivas = mean(ItEfectivas),
seItEfectivas = sd(ItEfectivas)
) %>%
group_by(Tabu, Inicial) %>%
summarize(
seItEfectivas = sd(meanItEfectivas),
meanItEfectivas = mean(meanItEfectivas)
)
dataItEfTSS <- data %>%
filter(substr(Tabu, 1, 3) == "TSS") %>%
filter(Aspirar == TRUE) %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanItEfectivas = mean(ItEfectivas),
seItEfectivas = sd(ItEfectivas)
) %>%
group_by(Tabu, Inicial) %>%
summarize(
seItEfectivas = sd(meanItEfectivas),
meanItEfectivas = mean(meanItEfectivas)
)
data %>%
filter(substr(Tabu, 1, 3) == "TSC") %>%
filter(Aspirar == TRUE) %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n())
) %>%
filter(PorcentajeVecindad %in% c(5, 20, 40, 60, 80, 100)) %>%
mutate(PorcentajeVecindad = as.factor(PorcentajeVecindad)) %>%
group_by(Tabu, Inicial, PorcentajeVecindad, CantMemoria) %>%
summarize(
seGap = sd(meanGap)/sqrt(n()),
meanGap = mean(meanGap)
) %>%
ggplot(aes(y = meanGap, x = CantMemoria, group = PorcentajeVecindad, color = PorcentajeVecindad)) +
geom_errorbar(aes(ymax= meanGap + seGap, ymin = meanGap - seGap), width = 0.1) +
geom_vline(data = dataItEfTSC, aes(xintercept = meanItEfectivas), color = "black", alpha = 0.5) +
geom_vline(data = dataItEfTSC, aes(xintercept = meanItEfectivas + seItEfectivas), color = "blue", alpha = 0.5, linetype = "dashed") +
geom_vline(data = dataItEfTSC, aes(xintercept = meanItEfectivas - seItEfectivas), color = "blue", alpha = 0.5, linetype = "dashed") +
geom_point() +
geom_line() +
facet_grid(Tabu~Inicial, scales = "free_y")
data %>%
filter(substr(Tabu, 1, 3) == "TSS") %>%
filter(Aspirar == TRUE) %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n())
) %>%
filter(PorcentajeVecindad %in% c(5, 20, 40, 60, 80, 100)) %>%
mutate(PorcentajeVecindad = as.factor(PorcentajeVecindad)) %>%
group_by(Tabu, Inicial, PorcentajeVecindad, CantMemoria) %>%
summarize(
seGap = sd(meanGap)/sqrt(n()),
meanGap = mean(meanGap)
) %>%
ggplot(aes(y = meanGap, x = CantMemoria, group = PorcentajeVecindad, color = PorcentajeVecindad)) +
geom_errorbar(aes(ymax= meanGap + seGap, ymin = meanGap - seGap), width = 0.1) +
geom_vline(data = dataItEfTSS, aes(xintercept = meanItEfectivas), color = "black", alpha = 0.5) +
geom_vline(data = dataItEfTSS, aes(xintercept = meanItEfectivas + seItEfectivas), color = "blue", alpha = 0.5, linetype = "dashed") +
geom_vline(data = dataItEfTSS, aes(xintercept = meanItEfectivas - seItEfectivas), color = "blue", alpha = 0.5, linetype = "dashed") +
geom_point() +
geom_line() +
facet_grid(Tabu~Inicial, scales = "free_y")
data %>%
filter(substr(Tabu, 1, 3) == "TSC") %>%
filter(Aspirar == TRUE, CantMemoria <= 200) %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)
) %>%
filter(PorcentajeVecindad %in% c(20, 40, 60, 80, 100)) %>%
mutate(PorcentajeVecindad = as.factor(PorcentajeVecindad)) %>%
group_by(Tabu, Inicial, PorcentajeVecindad, Iteraciones) %>%
summarize(
seGap = sd(meanGap)/sqrt(n()),
meanGap = mean(meanGap)
) %>%
ggplot(aes(y = meanGap, x = Iteraciones, group = PorcentajeVecindad, color = PorcentajeVecindad)) +
geom_errorbar(aes(ymax= meanGap + seGap, ymin = meanGap - seGap), width = 0.1) +
geom_point() +
geom_line() +
geom_vline(data = dataItEfTSC, aes(xintercept = meanItEfectivas), color = "black", alpha = 0.5) +
geom_vline(data = dataItEfTSC, aes(xintercept = meanItEfectivas + seItEfectivas), color = "blue", alpha = 0.5, linetype = "dashed") +
geom_vline(data = dataItEfTSC, aes(xintercept = meanItEfectivas - seItEfectivas), color = "blue", alpha = 0.5, linetype = "dashed") +
facet_grid(Tabu~Inicial, scales = "free_y")
ggplot(rankingFull,
aes(y = Orden, x = Datos, label = paste0(Tabu, " ", Inicial, "\n", round(meanGap,3)),
group = paste(Tabu, Inicial), color = paste(Tabu, Inicial))) +
geom_line() +
geom_label() +
scale_x_discrete(expand = c(0.1, 0.1)) +
scale_y_continuous(trans = "reverse", breaks = seq(1, nrow(ranking)), expand = c(0.1, 0.1)) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none"
)
## Histograma ------------------------------------------------------------------
data %>%
filter(substr(Tabu, 1, 3) == "TSC") %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n()),
meanItEfectivas = mean(ItEfectivas),
meanMemoriaEfectiva = mean(memoriaEfectiva)
) %>%
ggplot(aes(meanGap)) +
geom_histogram() +
xlim(0,1) +
facet_grid(Tabu~Inicial, scale="free_y")
data %>%
filter(substr(Tabu, 1, 3) == "TSS") %>%
group_by(Tabu, Inicial, Iteraciones, PorcentajeVecindad, CantMemoria, Aspirar) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n()),
meanItEfectivas = mean(ItEfectivas),
meanMemoriaEfectiva = mean(memoriaEfectiva)
) %>%
ggplot(aes(meanGap)) +
geom_histogram() +
xlim(0,1) +
facet_grid(Tabu~Inicial, scale="free_y")
## Porcentaje de vecindad ------------------------------------------------------
data %>%
mutate(algo3 = substr(Tabu, 1, 3)) %>%
mutate(PorcentajeVecindad = as.factor(PorcentajeVecindad)) %>%
group_by(algo3, Algoritmo, PorcentajeVecindad) %>%
summarize(
meanGap = mean(Gap),
seGap = sd(Gap)/sqrt(n())
) %>%
ggplot(aes(x = PorcentajeVecindad, y = meanGap, group = Algoritmo, color = Algoritmo)) +
geom_errorbar(aes(ymax = meanGap + seGap, ymin = meanGap - seGap), width = 0.2) +
geom_point() +
geom_line() +
facet_wrap(~algo3, scale = "free_y")
ggplot(rankingFull,
aes(y = Orden, x = Datos, label = paste0(Tabu, " ", Inicial, "\n", round(meanGap,3)),
group = paste(Tabu, Inicial), color = paste(Tabu, Inicial))) +
geom_line() +
geom_label() +
scale_x_discrete(expand = c(0.1, 0.1)) +
scale_y_continuous(trans = "reverse", breaks = seq(1, nrow(ranking)), expand = c(0.1, 0.1)) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none"
)
